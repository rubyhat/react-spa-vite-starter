{
  "entryPoints": ["src"],
  // Определяет, какие файлы TypeDoc должен анализировать.
  // В данном случае — вся папка `src`.

  "entryPointStrategy": "expand",
  // Раскрывает содержимое всех подпапок `src`, включая модули и их экспортируемые элементы.

  "out": "docs",
  // Определяет папку, в которую будет сохраняться сгенерированная документация.

  "tsconfig": "tsconfig.json",
  // Указывает путь к конфигурации TypeScript (`tsconfig.json`),
  // чтобы TypeDoc использовал те же правила, что и компилятор TypeScript.

  "exclude": [
    "**/__tests__/**",
    "**/*.test.ts",
    "**/*.test.tsx",
    "src/**/*.spec.ts",
    "src/**/*.spec.tsx",
    "src/**/*.config.ts",
    "vite.config.ts",
    "jest.config.js"
  ],
  // Исключает файлы и папки, которые **не должны** попадать в документацию:
  // - `__tests__`, `*.test.ts(x)`, `*.spec.ts(x)` — файлы с тестами
  // - `*.config.ts`, `vite.config.ts`, `jest.config.js` — конфигурационные файлы

  "excludePrivate": true,
  // Исключает **приватные методы и свойства** (`private` в TypeScript) из документации.

  "excludeProtected": true,
  // Исключает **защищённые методы и свойства** (`protected` в TypeScript) из документации.

  "excludeExternals": true,
  // Исключает из документации элементы, которые **приходят из внешних зависимостей**
  // (например, библиотеки, импортируемые из `node_modules`).

  "hideGenerator": true,
  // Убирает из документации строку "Generated by TypeDoc", делая её чище.

  "name": "Project Frontend Documentation",
  // Определяет название проекта, которое будет отображаться в заголовке документации.

  "includeVersion": true,
  // Включает отображение версии проекта в документации
  // (версия берётся из `package.json`).

  "plugin": ["typedoc-plugin-missing-exports"]
  // Использует плагин `typedoc-plugin-missing-exports`,
  // который автоматически добавляет в документацию интерфейсы и типы,
  // если они используются, но не экспортируются.
}
